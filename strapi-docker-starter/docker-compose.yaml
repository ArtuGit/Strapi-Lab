version: "3.8"

services:

  backend:
    container_name: strapi-starter-backend
    build:
      context: backend
      dockerfile: backend/Dockerfile
    restart: unless-stopped
    env_file:
      - backend/.env
    volumes:
      - ./backend/config:/opt/app/config
      - ./backend/src:/opt/app/src
      - ./backend/package.json:/opt/package.json
      - ./backend/yarn.lock:/opt/yarn.lock
      - ./backend/.env:/opt/app/.env
      - ./backend/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi-starter-net
    depends_on:
      - postgres
      - mailhog

  postgres:
    container_name: strapi-starter-postgres
    image: postgres
    ports:
      - "6232:5432"
    networks:
      - strapi-starter-net
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
#      - ./backend/init/db-seed.sql:/docker-entrypoint-initdb.d/db-seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d strapi-starter"]
      interval: 5s
      timeout: 15s
      start_period: 10s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: strapi-starter

  mailhog:
    image: mailhog/mailhog
    container_name: strapi-starter-mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - strapi-starter-net

networks:
  strapi-starter-net:
    name: Strapi Starter Net
    driver: bridge
